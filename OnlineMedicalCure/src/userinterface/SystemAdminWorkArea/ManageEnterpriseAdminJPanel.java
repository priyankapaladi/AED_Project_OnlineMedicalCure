/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.SystemAdminWorkArea;

import Business.EcoSystem;
import Business.Employee.Employee;
import Business.Enterprise.Enterprise;
import Business.Network.Network;
import Business.Role.AdminRole;
import Business.UserAccount.UserAccount;
import EmailValidation.EmailValidator;
import java.awt.CardLayout;
import java.awt.Color;
import java.awt.Component;
import java.awt.Graphics;
import java.awt.event.KeyEvent;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import javax.imageio.ImageIO;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author raunak
 */
public class ManageEnterpriseAdminJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private EcoSystem system;
    static int i = 70;
    static int p = 0;
    String ip ;
    boolean emailCheck;
     EmailValidator e = new EmailValidator();

    /**
     * Creates new form ManageEnterpriseJPanel
     */
        private BufferedImage image;

    

    @Override
    protected void paintComponent(Graphics g) {
        super.paintComponent(g);
        
        g.drawImage(image, 0, 0,this.getWidth(), this.getHeight(), null); // see javadoc for more info on the parameters            
    }
   
  
    public ManageEnterpriseAdminJPanel(JPanel userProcessContainer, EcoSystem system) {
        initComponents();

        this.userProcessContainer = userProcessContainer;
        this.system = system;

        populateTable();
        populateNetworkComboBox();
        try {                
          image = ImageIO.read(new File("F:\\hospital.jpg"));
       
       } catch (IOException ex) {
            // handle exception...
                    System.out.println("Exception:" + ex);
       }
    usernameJTextField.setEnabled(true);
        emailTxt.setEnabled(true);
        passwordJPasswordField.setEnabled(true);
        nameJTextField.setEnabled(true);
        usernameJTextField.setText("");
        emailTxt.setText("");
        passwordJPasswordField.setText("");
        nameJTextField.setText("");
        submitJButton.setEnabled(true);
        
    }

    private void populateTable() {
        DefaultTableModel model = (DefaultTableModel) enterpriseJTable.getModel();

        model.setRowCount(0);
        for (Network network : system.getNetworkList()) {
            for (Enterprise enterprise : network.getEnterpriseDirectory().getEnterpriseList()) {
                for (UserAccount userAccount : enterprise.getUserAccountDirectory().getUserAccountList()) {
                    Object[] row = new Object[4];
                    row[0] = enterprise.getName();
                    row[1] = network.getName();
                    row[2] = userAccount.getUsername();
                    row[3] = userAccount.getIpAddress();

                    model.addRow(row);
                }
            }
        }
    }

    private void populateNetworkComboBox() {
        networkJComboBox.removeAllItems();

        for (Network network : system.getNetworkList()) {
            networkJComboBox.addItem(network);
        }
    }

    private void populateEnterpriseComboBox(Network network) {
        enterpriseJComboBox.removeAllItems();

        for (Enterprise enterprise : network.getEnterpriseDirectory().getEnterpriseList()) {
            enterpriseJComboBox.addItem(enterprise);
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jScrollPane1 = new javax.swing.JScrollPane();
        enterpriseJTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        networkJComboBox = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        usernameJTextField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        enterpriseJComboBox = new javax.swing.JComboBox();
        submitJButton = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        nameJTextField = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        passwordJPasswordField = new javax.swing.JPasswordField();
        backJButton = new javax.swing.JButton();
        emailLabel = new javax.swing.JLabel();
        emailTxt = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 153, 0));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        enterpriseJTable.setBackground(new java.awt.Color(255, 153, 0));
        enterpriseJTable.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        enterpriseJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Enterprise Name", "Network", "Username", "IP Address"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(enterpriseJTable);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 60, 523, 95));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setText("Network");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 180, -1, -1));

        networkJComboBox.setBackground(new java.awt.Color(0, 153, 153));
        networkJComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        networkJComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                networkJComboBoxActionPerformed(evt);
            }
        });
        add(networkJComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 180, 136, -1));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setText("Username");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 180, -1, -1));

        usernameJTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                usernameJTextFieldKeyPressed(evt);
            }
        });
        add(usernameJTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 180, 130, -1));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setText("Enterprise");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 220, -1, -1));

        enterpriseJComboBox.setBackground(new java.awt.Color(0, 153, 153));
        enterpriseJComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        add(enterpriseJComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 220, 136, -1));

        submitJButton.setBackground(new java.awt.Color(0, 0, 0));
        submitJButton.setForeground(new java.awt.Color(255, 255, 255));
        submitJButton.setText("Create Admin");
        submitJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitJButtonActionPerformed(evt);
            }
        });
        add(submitJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 350, 140, 30));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel4.setText("Password");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 220, -1, -1));

        nameJTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                nameJTextFieldKeyPressed(evt);
            }
        });
        add(nameJTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 180, 136, -1));

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel5.setText("Name");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 180, -1, -1));

        passwordJPasswordField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                passwordJPasswordFieldKeyPressed(evt);
            }
        });
        add(passwordJPasswordField, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 220, 130, -1));

        backJButton.setIcon(new javax.swing.ImageIcon("F:\\back.png")); // NOI18N
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });
        add(backJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 30, 30));

        emailLabel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        emailLabel.setText("e-mail");
        add(emailLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 220, -1, -1));

        emailTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                emailTxtActionPerformed(evt);
            }
        });
        emailTxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                emailTxtKeyPressed(evt);
            }
        });
        add(emailTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 220, 136, -1));

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel7.setText("Manage Adminitrators to the Hospitals of a Network");
        add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 20, -1, -1));

        jButton1.setBackground(new java.awt.Color(0, 0, 0));
        jButton1.setIcon(new javax.swing.ImageIcon("F:\\arrows_refresh.png")); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 350, 30, 30));
    }// </editor-fold>//GEN-END:initComponents

    private void networkJComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_networkJComboBoxActionPerformed

        Network network = (Network) networkJComboBox.getSelectedItem();
        if (network != null) {
            populateEnterpriseComboBox(network);
        }


    }//GEN-LAST:event_networkJComboBoxActionPerformed

    private void submitJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitJButtonActionPerformed

        
       if (nameJTextField.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Please enter the name");
            
            
        } else {
            
            if (usernameJTextField.getText().isEmpty() || passwordJPasswordField.getPassword().equals("") || emailTxt.getText().isEmpty()
                    ) {
                JOptionPane.showMessageDialog(null, " Please enter all the fields");
                return;
            }
      
         
       }
       
           emailCheck = e.validate(emailTxt.getText().trim());
            if(!emailCheck){
                          JOptionPane.showMessageDialog(null, "Enter a valid email address");

                return;
            }
        Enterprise enterprise = (Enterprise) enterpriseJComboBox.getSelectedItem();
       // ip = "216.15.125." + i;
       
       ip = "216.105."+i+p;
     
       
       //ipAddressTxt.setText(ip);
        
        //ip = "206.200.170" + i;
        String username = usernameJTextField.getText().trim();
        String password = String.valueOf(passwordJPasswordField.getPassword());
        String emailID = emailTxt.getText().trim();
        String name = nameJTextField.getText().trim();

        Employee employee = enterprise.getEmployeeDirectory().createEmployee(name);
         
        UserAccount account = enterprise.getUserAccountDirectory().createUserAccount(username,
                password, employee, new AdminRole(), ip,emailID);
             i++;  
        populateTable();
        
        usernameJTextField.setEnabled(false);
        emailTxt.setEnabled(false);
        passwordJPasswordField.setEnabled(false);
        nameJTextField.setEnabled(false);
        submitJButton.setEnabled(false);

    }//GEN-LAST:event_submitJButtonActionPerformed

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed
        userProcessContainer.remove(this);
        Component[] componentArray = userProcessContainer.getComponents();
        Component component = componentArray[componentArray.length - 1];
        SystemAdminWorkAreaJPanel sysAdminwjp = (SystemAdminWorkAreaJPanel) component;
        sysAdminwjp.populateTree();
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButtonActionPerformed

    private void emailTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_emailTxtActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_emailTxtActionPerformed

    private void usernameJTextFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_usernameJTextFieldKeyPressed
        // TODO add your handling code here:
               int key = evt.getKeyCode();
        if ((key >= evt.VK_A && key <= evt.VK_Z) || key == KeyEvent.VK_BACK_SPACE ||  (key<=evt.VK_NUMPAD9 && key >= evt.VK_NUMPAD0)) {
            usernameJTextField.setBackground(Color.white);
                        usernameJTextField.setEditable(true);


        } else {
            usernameJTextField.setBackground(Color.red);
                        usernameJTextField.setEditable(false);

           
        }
       
    }//GEN-LAST:event_usernameJTextFieldKeyPressed

    private void passwordJPasswordFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_passwordJPasswordFieldKeyPressed
        // TODO add your handling code here:
               int key = evt.getKeyCode();
        if ((key >= evt.VK_A && key <= evt.VK_Z) || key == KeyEvent.VK_BACK_SPACE ||  (key<=evt.VK_NUMPAD9 && key >= evt.VK_NUMPAD0)) {
            passwordJPasswordField.setBackground(Color.white);
                        passwordJPasswordField.setEditable(true);


        } else {
            passwordJPasswordField.setBackground(Color.red);
                        passwordJPasswordField.setEditable(false);
                        JOptionPane.showMessageDialog(null, "Please enter only alphabets and numbers!");

           
        }
       
    }//GEN-LAST:event_passwordJPasswordFieldKeyPressed

    private void nameJTextFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nameJTextFieldKeyPressed
        // TODO add your handling code here:
               int key = evt.getKeyCode();
        if ((key >= evt.VK_A && key <= evt.VK_Z) || key == KeyEvent.VK_BACK_SPACE ||  (key<=evt.VK_NUMPAD9 && key >= evt.VK_NUMPAD0)) {
            nameJTextField.setBackground(Color.white);
                        nameJTextField.setEditable(true);


        } else {
            nameJTextField.setBackground(Color.red);
                        nameJTextField.setEditable(false);

           
        }
       
    }//GEN-LAST:event_nameJTextFieldKeyPressed

    private void emailTxtKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_emailTxtKeyPressed
        // TODO add your handling code here:
               int key = evt.getKeyCode();
        if ((key >= KeyEvent.VK_A && key <= evt.VK_Z) || key == KeyEvent.VK_BACK_SPACE ||  (key<=evt.VK_9 && key >= evt.VK_0)
                || key == evt.VK_AMPERSAND || key == evt.VK_DOLLAR || key == evt.VK_EXCLAMATION_MARK || key == evt.VK_PERIOD ||
                key == evt.VK_UNDERSCORE || key == evt.VK_MINUS) {
            emailTxt.setBackground(Color.white);
                        emailTxt.setEditable(true);


        } else if(key == evt.VK_SHIFT && key == evt.VK_0){
            emailTxt.setBackground(Color.red);
                        emailTxt.setEditable(false);

           
        }
       

    }//GEN-LAST:event_emailTxtKeyPressed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        
          submitJButton.setEnabled(true);
        usernameJTextField.setEnabled(true);
        emailTxt.setEnabled(true);
        passwordJPasswordField.setEnabled(true);
        nameJTextField.setEnabled(true);
        usernameJTextField.setText("");
        emailTxt.setText("");
        passwordJPasswordField.setText("");
        nameJTextField.setText("");
    }//GEN-LAST:event_jButton1ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backJButton;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel emailLabel;
    private javax.swing.JTextField emailTxt;
    private javax.swing.JComboBox enterpriseJComboBox;
    private javax.swing.JTable enterpriseJTable;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField nameJTextField;
    private javax.swing.JComboBox networkJComboBox;
    private javax.swing.JPasswordField passwordJPasswordField;
    private javax.swing.JButton submitJButton;
    private javax.swing.JTextField usernameJTextField;
    // End of variables declaration//GEN-END:variables
}
