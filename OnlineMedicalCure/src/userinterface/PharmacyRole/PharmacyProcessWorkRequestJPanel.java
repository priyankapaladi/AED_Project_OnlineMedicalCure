/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.PharmacyRole;

import Business.UserAccount.UserAccount;
import Business.WorkQueue.PharmacyWorkRequest;
import EmailValidation.SendMail;
import Logging.LogReports;
import java.awt.CardLayout;
import java.awt.Component;
import java.awt.Desktop;
import java.awt.Graphics;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author raunak
 */
public class PharmacyProcessWorkRequestJPanel extends javax.swing.JPanel {

    JPanel userProcessContainer;
    PharmacyWorkRequest request;
     DateFormat dateFormat = new SimpleDateFormat("yyyy/MM/dd HH:mm:ss");
    Date date = new Date();
    String location;
    UserAccount account;
    /**
     * Creates new form ProcessWorkRequestJPanel
     */
    static int count;
    private BufferedImage image;

    SendMail mail = new SendMail();
    LogReports pharmLog = new LogReports();
    
    @Override
    protected void paintComponent(Graphics g) {
        super.paintComponent(g);
        
        g.drawImage(image, 0, 0,this.getWidth(), this.getHeight(), null); // see javadoc for more info on the parameters            
    }
    
    public PharmacyProcessWorkRequestJPanel(JPanel userProcessContainer, PharmacyWorkRequest request, UserAccount account) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.request = request;
        this.account = account;
        location = request.getPrescriptionLocation();

               try {                
          image = ImageIO.read(new File("F:\\pharm.jpg"));
       
       } catch (IOException ex) {
            // handle exception...
                    System.out.println("Exception:" + ex);
       }
               valueLabel.setText(request.getRequestId());
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        submitJButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        backJButton = new javax.swing.JButton();
        comboStatus = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        openBtn = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        valueLabel = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 153, 0));

        submitJButton.setBackground(new java.awt.Color(0, 0, 0));
        submitJButton.setForeground(new java.awt.Color(255, 255, 255));
        submitJButton.setText("Inform Staff");
        submitJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitJButtonActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setText("Availability Of Medicines");

        backJButton.setIcon(new javax.swing.ImageIcon("F:\\back.png")); // NOI18N
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });

        comboStatus.setBackground(new java.awt.Color(0, 153, 153));
        comboStatus.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Yes-Delivery in Progress", "No-Delivery Cancelled", "Rejected" }));
        comboStatus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboStatusActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setText("Prescription Storage:");

        openBtn.setBackground(new java.awt.Color(0, 0, 0));
        openBtn.setForeground(new java.awt.Color(255, 255, 255));
        openBtn.setText("Open File");
        openBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openBtnActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel3.setText("Process the request for Request ID");

        valueLabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        valueLabel.setText("jLabel4");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(backJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(142, 142, 142)
                        .addComponent(jLabel3)
                        .addGap(31, 31, 31)
                        .addComponent(valueLabel))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(171, 171, 171)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(18, 18, 18)
                                .addComponent(comboStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(41, 41, 41)
                                .addComponent(submitJButton))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(43, 43, 43)
                                .addComponent(openBtn)))))
                .addContainerGap(146, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(backJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel3)
                        .addComponent(valueLabel)))
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(comboStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(submitJButton))
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(openBtn))
                .addContainerGap(169, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed

        userProcessContainer.remove(this);
        Component[] componentArray = userProcessContainer.getComponents();
        Component component = componentArray[componentArray.length - 1];
        PharmacyResponsePanel prp = (PharmacyResponsePanel) component;
        prp.populateTable();
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButtonActionPerformed

    private void submitJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitJButtonActionPerformed
        
        request.setAvailability(comboStatus.getSelectedItem().toString());
        request.setStatus("Completed");
        request.setResolveDate(date);
    }//GEN-LAST:event_submitJButtonActionPerformed

    private void comboStatusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboStatusActionPerformed
        // TODO add your handling code here:
        
        request.setAvailability(comboStatus.getSelectedItem().toString());
    }//GEN-LAST:event_comboStatusActionPerformed

    private void openBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openBtnActionPerformed
        // TODO add your handling code here:
        Desktop desktop = Desktop.getDesktop();
        System.out.println("location"+location);
       
        try {
             File file = new File(location);
            desktop.open(file);
        } catch (FileNotFoundException ex) {
            JOptionPane.showMessageDialog(null, "Guess the request was sent with the wrong file destination. Please reject the request!");
        } catch (IOException ex) {
            Logger.getLogger(PharmacyProcessWorkRequestJPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
        
  //final PharmacyWorkRequest phrequest = new PharmacyWorkRequest();
       
        
    switch (request.getNumberOfTimesItIsOpened()) {
        case 0:
            request.setNumberOfTimesItIsOpened();
            break;
        case 1:
            request.setNumberOfTimesItIsOpened();
            break;
        case 2:
            request.setNumberOfTimesItIsOpened();
            
            break;
        default:
            break;
    }    
    
     if(request.getNumberOfTimesItIsOpened()>= 3){
          
           new Thread(new Runnable() {
            public void run() {
                  String data = "The employee with UserName: "+account.getUsername()+
                    " accessed the record of : "+request.getPatientName()+
                    " with requestID:" + request.getRequestId() + " and it was accessed "
                          +request.getNumberOfTimesItIsOpened() + " times";
            
         
        mail.sendAlertMail(data, "F:/"+account.getUsername()+"/"+account.getUsername());            }
        }).start();
     }
    pharmLog.logUserData("The prescription for "+request.getPatientName()+" with RequestID: "+request.getRequestId()+"was accessed!",
                account.getUsername());
      
       
    }//GEN-LAST:event_openBtnActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backJButton;
    private javax.swing.JComboBox comboStatus;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JButton openBtn;
    private javax.swing.JButton submitJButton;
    private javax.swing.JLabel valueLabel;
    // End of variables declaration//GEN-END:variables
}
